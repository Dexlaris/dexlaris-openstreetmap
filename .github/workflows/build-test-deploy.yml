name: Build, Test & Deploy Dexlaris.OpenStreetMap

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
  release:
    types: [published]

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DEPLOY_PKG_TOKEN: ${{secrets.DEPLOY_PKG_TOKEN}}
  PKG_REGISTRY: https://nuget.pkg.github.com/Dexlaris/index.json
  DOTNET_NOLOGO: true
  NuGetDirectory: ${{ github.workspace }}/nupkgs
  
jobs:
  build-test:
    name: ðŸ”§ Build & âœ… Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Restore Dependencies
        run: dotnet restore Dexlaris.OpenStreetMap

      - name: Build Solution
        run: dotnet build Dexlaris.OpenStreetMap.sln --no-restore --configuration Release

      - name: Run Tests
        run: dotnet test Dexlaris.OpenStreetMap.sln --configuration Release
  
  create_nuget:
    name: ðŸ“¦ Package
    runs-on: ubuntu-latest
    needs: build-test
    if: github.event_name == 'release'
    
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Restore & Build
        run: |
          dotnet restore Dexlaris.OpenStreetMap.sln
          dotnet build Dexlaris.OpenStreetMap.sln --configuration Release

      - name: Pack Dexlaris.Core.Persistence
        run: |
          dotnet pack src/Dexlaris.OpenStreetMap/Dexlaris.OpenStreetMap.csproj \
            --configuration Release \
            -p:PackageVersion=${{ github.event.release.tag_name }} \
            --output ${{ env.NuGetDirectory }}

      - name: Upload Package Artifact
        uses: actions/upload-artifact@v4
        with:
          name: nuget
          path: ${{ env.NuGetDirectory }}/*.nupkg
          if-no-files-found: error
          retention-days: 7
          
  deploy:
    name: ðŸš€ Deploy to GitHub Packages
    runs-on: ubuntu-latest
    needs: [ create_nuget ]
    if: github.event_name == 'release'
    
    permissions:
      packages: write
      contents: read
    
    steps:
      - name: Download NuGet Package
        uses: actions/download-artifact@v4
        with:
          name: nuget
          path: ${{ env.NuGetDirectory }}

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Authenticate to GitHub Packages
        run: dotnet nuget add source --username Dexlaris --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/Dexlaris/index.json"

      - name: Push Package(s)
        run: |
          for file in ${{ env.NuGetDirectory }}/*.nupkg; do
            dotnet nuget push "$file" --source "github" --skip-duplicate
          done